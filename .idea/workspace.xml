<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0caa0cab-5bfb-48a9-806c-48fff31cf037" name="Default" comment="#! /usr/bin/env python&#10;#-*- coding:utf-8 -*-&#10;import os,random&#10;# Iterate file system.&#10;def loadInfo(dataset_root):&#10;&#9;print &quot;Searching files in&quot;, dataset_root&#10;&#9;folders = sorted(os.listdir(dataset_root))&#10;&#9;file_info = []&#10;&#9;label = 0&#10;&#9;for folder in folders:&#10;&#9;&#9;folder_path = dataset_root + '/' + folder&#10;&#9;&#9;items = os.listdir(folder_path)&#10;&#9;&#9;for item in range(len(items)):&#10;&#9;&#9;&#9;if len(items) &lt; 2:&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;#m = item + 1&#10;&#9;&#9;&#9;#if m &gt; len(items) - 1:&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;item_path = folder_path + '/' + items[item]&#10;&#9;&#9;&#9;if not os.path.isdir(item_path):&#10;&#9;&#9;&#9;&#9;continue&#10;&#9;&#9;&#9;files = os.listdir(item_path)&#10;&#9;&#9;&#9;#每个视频中取出40帧&#10;&#9;&#9;&#9;samples= random.sample(files, 2)&#10;&#9;&#9;&#9;for sample in samples:&#10;&#9;&#9;&#9;&#9;sample = folder + '/' + items[item] + '/' + sample + ' ' + str(label)&#10;&#9;&#9;&#9;&#9;file_info.append(sample)&#10;&#9;&#9;&#9;#file_info.append(map(lambda x: folder + '/' + items[item] + '/' + x, files))&#10;&#9;&#9;&#9;#每个帧中取一张图片&#10;&#9;&#9;&#9;#for file in files:&#10;&#9;&#9;&#9;#&#9;file = folder + '/' + items[item] + '/' + file + ' ' + str(label)&#10;&#9;&#9;&#9;#&#9;file_info.append(file)&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;break&#10;&#9;&#9;label += 1&#10;&#9;return file_info&#10;&#10;def saveFileInfo(file_list, output_path):&#10;&#9;print &quot;Writing file info to&quot;, output_path&#10;&#9;with open(output_path, 'w') as f:&#10;&#9;&#9;#label = 0&#10;&#9;&#9;for items in file_list:&#10;&#9;&#9;&#9;#for item in items:&#10;&#9;&#9;&#9;#line = ' '.join([items,str(label)]) + '\n'&#10;&#9;&#9;&#9;line = ''.join(items) + '\n'&#10;&#9;&#9;&#9;#line = ' '.join([item[item.find('lfw-cropped')+12:],str(label)]) + '\n'&#10;&#9;&#9;&#9;f.write(line)&#10;&#9;&#9;#&#9;label += 1&#10;&#9;&#9;f.close()&#10;if __name__ == '__main__':&#10;&#9;root_path = 'F:/dataset/YouTubeFaces/aligned_images_DB'&#10;&#9;file_info = loadInfo(root_path)&#10;&#9;output_path = './data/test_aligned2.txt'&#10;&#9;saveFileInfo(file_info, output_path)">
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/face_recognition1.py" afterPath="$PROJECT_DIR$/face_recognition1.py" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageDataManager">
    <SUITE FILE_PATH="coverage/face_recognition_video$v2i.coverage" NAME="v2i Coverage Results" MODIFIED="1525965355472" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$USER_HOME$/Desktop" />
    <SUITE FILE_PATH="coverage/face_recognition_video$namelist_test.coverage" NAME="namelist-test Coverage Results" MODIFIED="1526373340307" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/face_recognition_video$face_recognition.coverage" NAME="face_recognition Coverage Results" MODIFIED="1525356926089" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/face_recognition_video$namelist.coverage" NAME="namelist Coverage Results" MODIFIED="1526353078542" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/face_recognition_video$data_pair.coverage" NAME="data_pair Coverage Results" MODIFIED="1525352330070" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/face_recognition_video$face_recognition1.coverage" NAME="face_recognition1 Coverage Results" MODIFIED="1526391827113" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/face_recognition_video$namelist_reg.coverage" NAME="namelist-reg Coverage Results" MODIFIED="1526372591674" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_TABLE_DETAILS" value="true" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="face-recognition-video" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="part2.py" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/part2.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="660">
              <caret line="42" column="12" lean-forward="false" selection-start-line="42" selection-start-column="12" selection-end-line="42" selection-end-column="12" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="face_recognition1.py" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/face_recognition1.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-991">
              <caret line="51" column="19" lean-forward="true" selection-start-line="51" selection-start-column="19" selection-end-line="51" selection-end-column="19" />
              <folding>
                <element signature="e#319#357#0" expanded="false" />
                <element signature="e#3277#3294#0" expanded="false" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="caffe-visual.py" pinned="false" current-in-tab="false">
        <entry file="file://$USER_HOME$/Desktop/caffe-visual.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="0">
              <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="pydevd.py" pinned="false" current-in-tab="false">
        <entry file="file://$APPLICATION_HOME_DIR$/helpers/pydev/pydevd.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="46830">
              <caret line="1598" column="0" lean-forward="false" selection-start-line="1598" selection-start-column="0" selection-end-line="1598" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="register1.txt" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/register1.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="420">
              <caret line="14" column="29" lean-forward="false" selection-start-line="14" selection-start-column="29" selection-end-line="14" selection-end-column="29" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="test_aligned2.txt" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/test_aligned2.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="0">
              <caret line="0" column="36" lean-forward="false" selection-start-line="0" selection-start-column="36" selection-end-line="0" selection-end-column="36" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="register1_aligned.txt" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/register1_aligned.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="0">
              <caret line="0" column="36" lean-forward="false" selection-start-line="0" selection-start-column="36" selection-end-line="0" selection-end-column="36" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="test_aligned.txt" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/test_aligned.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="30">
              <caret line="1" column="36" lean-forward="false" selection-start-line="1" selection-start-column="36" selection-end-line="1" selection-end-column="36" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="namelist-test.py" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/namelist-test.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1350">
              <caret line="45" column="46" lean-forward="false" selection-start-line="45" selection-start-column="46" selection-end-line="45" selection-end-column="46" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="ZLZhangLi &lt;1743847476@qq.com&gt;" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/data_pair.py" />
        <option value="$PROJECT_DIR$/face_recognition.py" />
        <option value="$USER_HOME$/Desktop/v2i.py" />
        <option value="$PROJECT_DIR$/data/register1.txt" />
        <option value="$PROJECT_DIR$/namelist.py" />
        <option value="F:/VGG_Face_Caffe_Model-master/face_recognition_pyqt5.py" />
        <option value="$PROJECT_DIR$/namelist-reg.py" />
        <option value="$PROJECT_DIR$/namelist-test.py" />
        <option value="$PROJECT_DIR$/face_recognition1.py" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsFlowSettings">
    <service-enabled>true</service-enabled>
    <exe-path />
    <annotation-enable>false</annotation-enable>
    <other-services-enabled>true</other-services-enabled>
    <auto-save>true</auto-save>
  </component>
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="-8" />
    <option name="y" value="-8" />
    <option name="width" value="1460" />
    <option name="height" value="920" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="face-recognition-video" type="b2602c69:ProjectViewProjectNode" />
              <item name="face-recognition-video" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="face-recognition-video" type="b2602c69:ProjectViewProjectNode" />
              <item name="face-recognition-video" type="462c0819:PsiDirectoryNode" />
              <item name="data" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="D:/Python35/python3.exe" />
    <property name="settings.editor.selected.configurable" value="reference.settingsdialog.IDE.editor.colors" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="settings.editor.splitter.proportion" value="0.27058825" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.face_recognition1">
    <configuration default="true" type="js.build_tools.gulp" factoryName="Gulp.js">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
    </configuration>
    <configuration default="true" type="BashConfigurationType" factoryName="Bash">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="INTERPRETER_PATH" value="d:\cygwin\bin\bash.exe" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="DjangoTestsConfigurationType" factoryName="Django tests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerJest" factoryName="Jest">
      <node-interpreter value="project" />
      <working-dir value="" />
      <envs />
      <scope-kind value="ALL" />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerProtractor" factoryName="Protractor">
      <config-file value="" />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavascriptDebugType" factoryName="JavaScript Debug">
      <method />
    </configuration>
    <configuration default="true" type="PyBehaveRunConfigurationType" factoryName="Behave">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="PyLettuceRunConfigurationType" factoryName="Lettuce">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <module name="face-recognition-video" />
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.npm" factoryName="npm">
      <command value="run" />
      <scripts />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;.&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method />
    </configuration>
    <configuration name="face_recognition1" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/face_recognition1.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="namelist-reg" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/namelist-reg.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="namelist-test" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/namelist-test.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="namelist" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/namelist.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="v2i" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="D:\Anaconda2\python.exe" />
      <option name="WORKING_DIRECTORY" value="$USER_HOME$/Desktop" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="face-recognition-video" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$USER_HOME$/Desktop/v2i.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <list size="5">
      <item index="0" class="java.lang.String" itemvalue="Python.v2i" />
      <item index="1" class="java.lang.String" itemvalue="Python.namelist" />
      <item index="2" class="java.lang.String" itemvalue="Python.namelist-reg" />
      <item index="3" class="java.lang.String" itemvalue="Python.namelist-test" />
      <item index="4" class="java.lang.String" itemvalue="Python.face_recognition1" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.face_recognition1" />
        <item index="1" class="java.lang.String" itemvalue="Python.namelist-test" />
        <item index="2" class="java.lang.String" itemvalue="Python.namelist-reg" />
        <item index="3" class="java.lang.String" itemvalue="Python.namelist" />
        <item index="4" class="java.lang.String" itemvalue="Python.v2i" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0caa0cab-5bfb-48a9-806c-48fff31cf037" name="Default" comment="" />
      <created>1525314678968</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1525314678968</updated>
    </task>
    <task id="LOCAL-00001" summary="#! /usr/bin/env python&#10;#-*- coding:utf-8 -*-&#10;import os,random&#10;# Iterate file system.&#10;def loadInfo(dataset_root):&#10;&#9;print &quot;Searching files in&quot;, dataset_root&#10;&#9;folders = sorted(os.listdir(dataset_root))&#10;&#9;file_info = []&#10;&#9;label = 0&#10;&#9;for folder in folders:&#10;&#9;&#9;folder_path = dataset_root + '/' + folder&#10;&#9;&#9;items = os.listdir(folder_path)&#10;&#9;&#9;for item in range(len(items)):&#10;&#9;&#9;&#9;if len(items) &lt; 2:&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;#m = item + 1&#10;&#9;&#9;&#9;#if m &gt; len(items) - 1:&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;item_path = folder_path + '/' + items[item]&#10;&#9;&#9;&#9;if not os.path.isdir(item_path):&#10;&#9;&#9;&#9;&#9;continue&#10;&#9;&#9;&#9;files = os.listdir(item_path)&#10;&#9;&#9;&#9;#每个视频中取出40帧&#10;&#9;&#9;&#9;samples= random.sample(files, 2)&#10;&#9;&#9;&#9;for sample in samples:&#10;&#9;&#9;&#9;&#9;sample = folder + '/' + items[item] + '/' + sample + ' ' + str(label)&#10;&#9;&#9;&#9;&#9;file_info.append(sample)&#10;&#9;&#9;&#9;#file_info.append(map(lambda x: folder + '/' + items[item] + '/' + x, files))&#10;&#9;&#9;&#9;#每个帧中取一张图片&#10;&#9;&#9;&#9;#for file in files:&#10;&#9;&#9;&#9;#&#9;file = folder + '/' + items[item] + '/' + file + ' ' + str(label)&#10;&#9;&#9;&#9;#&#9;file_info.append(file)&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;break&#10;&#9;&#9;label += 1&#10;&#9;return file_info&#10;&#10;def saveFileInfo(file_list, output_path):&#10;&#9;print &quot;Writing file info to&quot;, output_path&#10;&#9;with open(output_path, 'w') as f:&#10;&#9;&#9;#label = 0&#10;&#9;&#9;for items in file_list:&#10;&#9;&#9;&#9;#for item in items:&#10;&#9;&#9;&#9;#line = ' '.join([items,str(label)]) + '\n'&#10;&#9;&#9;&#9;line = ''.join(items) + '\n'&#10;&#9;&#9;&#9;#line = ' '.join([item[item.find('lfw-cropped')+12:],str(label)]) + '\n'&#10;&#9;&#9;&#9;f.write(line)&#10;&#9;&#9;#&#9;label += 1&#10;&#9;&#9;f.close()&#10;if __name__ == '__main__':&#10;&#9;root_path = 'F:/dataset/YouTubeFaces/aligned_images_DB'&#10;&#9;file_info = loadInfo(root_path)&#10;&#9;output_path = './data/test_aligned2.txt'&#10;&#9;saveFileInfo(file_info, output_path)">
      <created>1526374138484</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1526374138484</updated>
    </task>
    <task id="LOCAL-00002" summary="#! /usr/bin/env python&#10;#-*- coding:utf-8 -*-&#10;import os,random&#10;# Iterate file system.&#10;def loadInfo(dataset_root):&#10;&#9;print &quot;Searching files in&quot;, dataset_root&#10;&#9;folders = sorted(os.listdir(dataset_root))&#10;&#9;file_info = []&#10;&#9;label = 0&#10;&#9;for folder in folders:&#10;&#9;&#9;folder_path = dataset_root + '/' + folder&#10;&#9;&#9;items = os.listdir(folder_path)&#10;&#9;&#9;for item in range(len(items)):&#10;&#9;&#9;&#9;if len(items) &lt; 2:&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;#m = item + 1&#10;&#9;&#9;&#9;#if m &gt; len(items) - 1:&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;item_path = folder_path + '/' + items[item]&#10;&#9;&#9;&#9;if not os.path.isdir(item_path):&#10;&#9;&#9;&#9;&#9;continue&#10;&#9;&#9;&#9;files = os.listdir(item_path)&#10;&#9;&#9;&#9;#每个视频中取出40帧&#10;&#9;&#9;&#9;samples= random.sample(files, 2)&#10;&#9;&#9;&#9;for sample in samples:&#10;&#9;&#9;&#9;&#9;sample = folder + '/' + items[item] + '/' + sample + ' ' + str(label)&#10;&#9;&#9;&#9;&#9;file_info.append(sample)&#10;&#9;&#9;&#9;#file_info.append(map(lambda x: folder + '/' + items[item] + '/' + x, files))&#10;&#9;&#9;&#9;#每个帧中取一张图片&#10;&#9;&#9;&#9;#for file in files:&#10;&#9;&#9;&#9;#&#9;file = folder + '/' + items[item] + '/' + file + ' ' + str(label)&#10;&#9;&#9;&#9;#&#9;file_info.append(file)&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;break&#10;&#9;&#9;label += 1&#10;&#9;return file_info&#10;&#10;def saveFileInfo(file_list, output_path):&#10;&#9;print &quot;Writing file info to&quot;, output_path&#10;&#9;with open(output_path, 'w') as f:&#10;&#9;&#9;#label = 0&#10;&#9;&#9;for items in file_list:&#10;&#9;&#9;&#9;#for item in items:&#10;&#9;&#9;&#9;#line = ' '.join([items,str(label)]) + '\n'&#10;&#9;&#9;&#9;line = ''.join(items) + '\n'&#10;&#9;&#9;&#9;#line = ' '.join([item[item.find('lfw-cropped')+12:],str(label)]) + '\n'&#10;&#9;&#9;&#9;f.write(line)&#10;&#9;&#9;#&#9;label += 1&#10;&#9;&#9;f.close()&#10;if __name__ == '__main__':&#10;&#9;root_path = 'F:/dataset/YouTubeFaces/aligned_images_DB'&#10;&#9;file_info = loadInfo(root_path)&#10;&#9;output_path = './data/test_aligned2.txt'&#10;&#9;saveFileInfo(file_info, output_path)">
      <created>1526374194381</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1526374194381</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1456" height="876" extended-state="6" />
    <layout>
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.16762178" sideWeight="0.49109414" order="0" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32635984" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33426183" sideWeight="0.5028653" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3299356" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.42237762" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Python Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32729805" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32914925" sideWeight="0.49713466" order="10" side_tool="false" content_ui="tabs" x="22" y="310" width="1396" height="240" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3286908" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.16547278" sideWeight="0.5089058" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.40725243" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Data View" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3299356" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Coverage" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="true" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="#! /usr/bin/env python&#10;#-*- coding:utf-8 -*-&#10;import os,random&#10;# Iterate file system.&#10;def loadInfo(dataset_root):&#10;&#9;print &quot;Searching files in&quot;, dataset_root&#10;&#9;folders = sorted(os.listdir(dataset_root))&#10;&#9;file_info = []&#10;&#9;label = 0&#10;&#9;for folder in folders:&#10;&#9;&#9;folder_path = dataset_root + '/' + folder&#10;&#9;&#9;items = os.listdir(folder_path)&#10;&#9;&#9;for item in range(len(items)):&#10;&#9;&#9;&#9;if len(items) &lt; 2:&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;#m = item + 1&#10;&#9;&#9;&#9;#if m &gt; len(items) - 1:&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;item_path = folder_path + '/' + items[item]&#10;&#9;&#9;&#9;if not os.path.isdir(item_path):&#10;&#9;&#9;&#9;&#9;continue&#10;&#9;&#9;&#9;files = os.listdir(item_path)&#10;&#9;&#9;&#9;#每个视频中取出40帧&#10;&#9;&#9;&#9;samples= random.sample(files, 2)&#10;&#9;&#9;&#9;for sample in samples:&#10;&#9;&#9;&#9;&#9;sample = folder + '/' + items[item] + '/' + sample + ' ' + str(label)&#10;&#9;&#9;&#9;&#9;file_info.append(sample)&#10;&#9;&#9;&#9;#file_info.append(map(lambda x: folder + '/' + items[item] + '/' + x, files))&#10;&#9;&#9;&#9;#每个帧中取一张图片&#10;&#9;&#9;&#9;#for file in files:&#10;&#9;&#9;&#9;#&#9;file = folder + '/' + items[item] + '/' + file + ' ' + str(label)&#10;&#9;&#9;&#9;#&#9;file_info.append(file)&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;break&#10;&#9;&#9;label += 1&#10;&#9;return file_info&#10;&#10;def saveFileInfo(file_list, output_path):&#10;&#9;print &quot;Writing file info to&quot;, output_path&#10;&#9;with open(output_path, 'w') as f:&#10;&#9;&#9;#label = 0&#10;&#9;&#9;for items in file_list:&#10;&#9;&#9;&#9;#for item in items:&#10;&#9;&#9;&#9;#line = ' '.join([items,str(label)]) + '\n'&#10;&#9;&#9;&#9;line = ''.join(items) + '\n'&#10;&#9;&#9;&#9;#line = ' '.join([item[item.find('lfw-cropped')+12:],str(label)]) + '\n'&#10;&#9;&#9;&#9;f.write(line)&#10;&#9;&#9;#&#9;label += 1&#10;&#9;&#9;f.close()&#10;if __name__ == '__main__':&#10;&#9;root_path = 'F:/dataset/YouTubeFaces/aligned_images_DB'&#10;&#9;file_info = loadInfo(root_path)&#10;&#9;output_path = './data/test_aligned2.txt'&#10;&#9;saveFileInfo(file_info, output_path)" />
    <option name="LAST_COMMIT_MESSAGE" value="#! /usr/bin/env python&#10;#-*- coding:utf-8 -*-&#10;import os,random&#10;# Iterate file system.&#10;def loadInfo(dataset_root):&#10;&#9;print &quot;Searching files in&quot;, dataset_root&#10;&#9;folders = sorted(os.listdir(dataset_root))&#10;&#9;file_info = []&#10;&#9;label = 0&#10;&#9;for folder in folders:&#10;&#9;&#9;folder_path = dataset_root + '/' + folder&#10;&#9;&#9;items = os.listdir(folder_path)&#10;&#9;&#9;for item in range(len(items)):&#10;&#9;&#9;&#9;if len(items) &lt; 2:&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;#m = item + 1&#10;&#9;&#9;&#9;#if m &gt; len(items) - 1:&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;item_path = folder_path + '/' + items[item]&#10;&#9;&#9;&#9;if not os.path.isdir(item_path):&#10;&#9;&#9;&#9;&#9;continue&#10;&#9;&#9;&#9;files = os.listdir(item_path)&#10;&#9;&#9;&#9;#每个视频中取出40帧&#10;&#9;&#9;&#9;samples= random.sample(files, 2)&#10;&#9;&#9;&#9;for sample in samples:&#10;&#9;&#9;&#9;&#9;sample = folder + '/' + items[item] + '/' + sample + ' ' + str(label)&#10;&#9;&#9;&#9;&#9;file_info.append(sample)&#10;&#9;&#9;&#9;#file_info.append(map(lambda x: folder + '/' + items[item] + '/' + x, files))&#10;&#9;&#9;&#9;#每个帧中取一张图片&#10;&#9;&#9;&#9;#for file in files:&#10;&#9;&#9;&#9;#&#9;file = folder + '/' + items[item] + '/' + file + ' ' + str(label)&#10;&#9;&#9;&#9;#&#9;file_info.append(file)&#10;&#9;&#9;&#9;#&#9;break&#10;&#9;&#9;&#9;break&#10;&#9;&#9;label += 1&#10;&#9;return file_info&#10;&#10;def saveFileInfo(file_list, output_path):&#10;&#9;print &quot;Writing file info to&quot;, output_path&#10;&#9;with open(output_path, 'w') as f:&#10;&#9;&#9;#label = 0&#10;&#9;&#9;for items in file_list:&#10;&#9;&#9;&#9;#for item in items:&#10;&#9;&#9;&#9;#line = ' '.join([items,str(label)]) + '\n'&#10;&#9;&#9;&#9;line = ''.join(items) + '\n'&#10;&#9;&#9;&#9;#line = ' '.join([item[item.find('lfw-cropped')+12:],str(label)]) + '\n'&#10;&#9;&#9;&#9;f.write(line)&#10;&#9;&#9;#&#9;label += 1&#10;&#9;&#9;f.close()&#10;if __name__ == '__main__':&#10;&#9;root_path = 'F:/dataset/YouTubeFaces/aligned_images_DB'&#10;&#9;file_info = loadInfo(root_path)&#10;&#9;output_path = './data/test_aligned2.txt'&#10;&#9;saveFileInfo(file_info, output_path)" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="43" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/part2.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="660">
          <caret line="42" column="12" lean-forward="false" selection-start-line="42" selection-start-column="12" selection-end-line="42" selection-end-column="12" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/face_recognition1.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3120">
          <caret line="104" column="0" lean-forward="false" selection-start-line="104" selection-start-column="0" selection-end-line="104" selection-end-column="0" />
          <folding>
            <element signature="e#319#357#0" expanded="false" />
            <element signature="e#3277#3294#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/pydev/pydevd.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="46830">
          <caret line="1598" column="0" lean-forward="false" selection-start-line="1598" selection-start-column="0" selection-end-line="1598" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/register1.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="420">
          <caret line="14" column="29" lean-forward="false" selection-start-line="14" selection-start-column="29" selection-end-line="14" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/test_aligned2.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="36" lean-forward="true" selection-start-line="0" selection-start-column="36" selection-end-line="0" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/register1_aligned.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="36" lean-forward="true" selection-start-line="0" selection-start-column="36" selection-end-line="0" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/test_aligned.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="30">
          <caret line="1" column="36" lean-forward="true" selection-start-line="1" selection-start-column="36" selection-end-line="1" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/namelist-test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1350">
          <caret line="45" column="46" lean-forward="false" selection-start-line="45" selection-start-column="46" selection-end-line="45" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/caffe-visual.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/part2.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="660">
          <caret line="42" column="12" lean-forward="false" selection-start-line="42" selection-start-column="12" selection-end-line="42" selection-end-column="12" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/classification.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="540">
          <caret line="19" column="27" lean-forward="false" selection-start-line="19" selection-start-column="27" selection-end-line="19" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/YTF-label.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/namelist.py" />
    <entry file="file://$PROJECT_DIR$/data_pair.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="330">
          <caret line="12" column="24" lean-forward="false" selection-start-line="12" selection-start-column="24" selection-end-line="12" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/sample_same_frame_images.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="5" column="25" lean-forward="false" selection-start-line="5" selection-start-column="25" selection-end-line="5" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/v2i.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="300">
          <caret line="11" column="15" lean-forward="false" selection-start-line="11" selection-start-column="15" selection-end-line="11" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/face_recognition.py" />
    <entry file="file://$PROJECT_DIR$/classification.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="570">
          <caret line="19" column="27" lean-forward="false" selection-start-line="19" selection-start-column="27" selection-end-line="19" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/YTF-label.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/namelist.py" />
    <entry file="file://$PROJECT_DIR$/data/sample_same_frame_images.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="5" column="25" lean-forward="true" selection-start-line="5" selection-start-column="25" selection-end-line="5" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data_pair.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="330">
          <caret line="12" column="24" lean-forward="false" selection-start-line="12" selection-start-column="24" selection-end-line="12" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/YTF-label.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.PyCharm2017.1/system/python_stubs/-905778651/__builtin__.py" />
    <entry file="file://$PROJECT_DIR$/classification.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="540">
          <caret line="19" column="27" lean-forward="false" selection-start-line="19" selection-start-column="27" selection-end-line="19" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data_pair.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="330">
          <caret line="12" column="24" lean-forward="false" selection-start-line="12" selection-start-column="24" selection-end-line="12" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/sample_same_frame_images.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="5" column="25" lean-forward="false" selection-start-line="5" selection-start-column="25" selection-end-line="5" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/face_recognition.py" />
    <entry file="file://$USER_HOME$/Desktop/v2i.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="300">
          <caret line="11" column="15" lean-forward="false" selection-start-line="11" selection-start-column="15" selection-end-line="11" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/part2.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="660">
          <caret line="42" column="12" lean-forward="false" selection-start-line="42" selection-start-column="12" selection-end-line="42" selection-end-column="12" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/namelist.py" />
    <entry file="file://F:/deepid2/DeepID2-master/preprocess/face_alignment.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="490">
          <caret line="25" column="0" lean-forward="true" selection-start-line="25" selection-start-column="0" selection-end-line="25" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/namelist-reg.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="30">
          <caret line="13" column="30" lean-forward="true" selection-start-line="13" selection-start-column="30" selection-end-line="13" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://F:/VGG_Face_Caffe_Model-master/face_recognition_pyqt5.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="152" column="21" lean-forward="false" selection-start-line="152" selection-start-column="21" selection-end-line="152" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/namelist-test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1350">
          <caret line="45" column="46" lean-forward="false" selection-start-line="45" selection-start-column="46" selection-end-line="45" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/test_aligned2.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="36" lean-forward="false" selection-start-line="0" selection-start-column="36" selection-end-line="0" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/register1_aligned.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="36" lean-forward="false" selection-start-line="0" selection-start-column="36" selection-end-line="0" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/test_aligned.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="30">
          <caret line="1" column="36" lean-forward="false" selection-start-line="1" selection-start-column="36" selection-end-line="1" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/register1.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="420">
          <caret line="14" column="29" lean-forward="false" selection-start-line="14" selection-start-column="29" selection-end-line="14" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/pydev/pydevd.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="46830">
          <caret line="1598" column="0" lean-forward="false" selection-start-line="1598" selection-start-column="0" selection-end-line="1598" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/caffe-visual.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/face_recognition1.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-991">
          <caret line="51" column="19" lean-forward="true" selection-start-line="51" selection-start-column="19" selection-end-line="51" selection-end-column="19" />
          <folding>
            <element signature="e#319#357#0" expanded="false" />
            <element signature="e#3277#3294#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>